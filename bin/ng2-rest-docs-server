#!/usr/bin/env node

var run = require('../bundle.js').run;

var fs = require('fs');

var port;
var baseURL;
var clean = false;
var jira = '';
try {
    if (process.argv.length >= 3) {
        for (var i = 0; i < process.argv.length; i++) {
            if (process.argv[i] === '-p') {
                port = process.argv[i + 1];
                break;
            }
        }
        for (var i = 0; i < process.argv.length; i++) {
            if (process.argv[i] === '-b') {
                baseURL = process.argv[i + 1];
                break;
            }
        }
        for (var i = 0; i < process.argv.length; i++) {
            if (process.argv[i] === '--clean' || process.argv[i] === '-c') {
                clean = true;
                break;
            }
        }
        for (var i = 0; i < process.argv.length; i++) {
            if (process.argv[i] === '--jira' || process.argv[i] === '-l') {
                jira = process.argv[i + 1];
                break;
            }
        }
        for (var i = 0; i < process.argv.length; i++) {
            if (process.argv[i] === '-v' || process.argv[i] === '--version') {
                var pack = JSON.parse(fs.readFileSync(__dirname + '/../package.json', 'utf8'));
                console.log('version: ' + pack['version']);
                process.exit(0);
            }
        }
    }
} catch (error) {
    console.log(error)
}

var urlSplit = jira.split('@');
var jiraUrl = urlSplit.length > 1 ? urlSplit[1] : undefined;
var authSplit = (urlSplit.length > 1) ? urlSplit[1] : undefined;
var jiraAuth = (authSplit !== undefined) ? authSplit.split(':') : undefined;
jiraAuth = (jiraAuth && jiraAuth.length > 1) ? ({ username: jiraAuth[0], password: jiraAuth[1] }) : {};

run(port, baseURL, clean, jiraUrl, jiraAuth);